<Window x:Class="CrewDragonHMI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:my="clr-namespace:CrewDragonHMI"
        xmlns:local="clr-namespace:CrewDragonHMI"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800"
        ResizeMode="NoResize">
    <Window.Resources>
        <my:ValueAngleConverter x:Key="valueAngleConverter"/>
        <my:ValueTextConverter x:Key="valueTextConverter"/>
    </Window.Resources>
    <Grid Background="#FFE8E8E8">
        <TextBox Name="hullTextLabel" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Top" 
                 Margin="78,136,0,0" 
                 Text="HULL INTEGRITY" 
                 TextWrapping="Wrap" 
                 Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="20" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Left" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False" Height="23" Width="134" SelectionTextBrush="Black"/>
        <TextBox Name="hullText"
                 HorizontalAlignment="Left"
                 Margin="78,175,0,0"
                 Text="100%"
                 TextWrapping="Wrap"
                 VerticalAlignment="Top"
                 Width="134"
                 Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="65" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Center" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
        <TextBox Name="rotationText" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Top"
                 Margin="50,326,0,0" 
                 Text="DIRECTION: 0°" 
                 TextWrapping="Wrap"
                 Width="206" Height="44" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="32" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Left" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
        <TextBox Name="speedText" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Top"
                 Margin="532,330,0,0" 
                 Text="SPEED: 1000 KM/S" 
                 TextWrapping="Wrap" 
                 Width="258" Height="36"  Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="32" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Left" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
        <Slider Name="speedChanger"
                Orientation="Vertical"
                HorizontalAlignment="Left" 
                Margin="634,379,0,0" 
                VerticalAlignment="Top"
                Height="150"
                TickPlacement="Both"
                Maximum="1000"
                TickFrequency="100"
                Foreground="Black"
                ValueChanged="speedChanger_ValueChanged">
        </Slider>
        <TextBox Name="batteryText" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Top"
                 Margin="256,83,0,0" 
                 Width="128" 
                 Text="BATTERY: 100%" 
                 TextWrapping="Wrap"
                 Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="20" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Center" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>

        <Grid Width="78" Height="204" Margin="0,0,160,145" Background="Black">
            <ProgressBar Name="battery"
                Value="50"
                Orientation="Vertical"
                Width="75"
                Height="200"
                Background="White" BorderBrush="White"/>
        </Grid>
        <TextBox Name="fuelText" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Top"
                 Margin="432,83,0,0" 
                 Width="96"
                 Text="FUEL: 100%" 
                 TextWrapping="Wrap"
                 Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="20" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Center" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
        <Grid Width="78" Height="204" Margin="160,0,0,145" Background="Black">
            <ProgressBar Name="fuel"
                 Value="50"
                 Orientation="Vertical"
                 Width="75"
                 Height="200" BorderBrush="White" Background="White">
            </ProgressBar>
        </Grid>
        <ToggleButton Name="alarm"
                      Height="40"
                      Width="500"
                      Margin="0,-495,0,0">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"  Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Label Content="SHIP STATUS: FUNCTIONAL" 
               FontFamily="Bahnschrift SemiBold SemiCondensed" IsHitTestVisible="False" FontSize="16"
               
               Height="25" Width="172"
               
               />
        </ToggleButton>
        <!--<TextBox Name="alertText"
                 Text="Ship Status: Functional" 
                 TextWrapping="Wrap" 
                 Margin="306,32,306,527"
                 Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Normal" FontSize="20" FontFamily="Bahnschrift SemiBold SemiCondensed" TextAlignment="Center" IsReadOnly="True" IsInactiveSelectionHighlightEnabled="True" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
        -->
        <!--
        <ToggleButton Name="alarm"  
                      HorizontalAlignment="Center" 
                      Margin="-450,25,0,50" 
                      VerticalAlignment="Top"
                      Width="75"
                      Height="75">
            <ToggleButton.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="75" />
                </Style>
            </ToggleButton.Resources>
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Red" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"  Value="Green" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <Label Content="Alarm" 
               HorizontalContentAlignment="Center"
               HorizontalAlignment="Center" 
               Margin="-450,100,0,50" 
               VerticalAlignment="Top"/>
        -->
        <!--
        <ToggleButton Name="generator" 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Top" 
                      Margin="120,260,0,0" 
                      Unchecked="generator_Unchecked" 
                      Checked="generator_Checked"
                      Height="10"
                      Width="10">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Red" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"  Value="Green" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        -->
        <!--
        <Label Name="generatorText" 
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
               Margin="434,354,0,0"
               Content="Generator" FontFamily="Bahnschrift SemiBold SemiCondensed" FontSize="20"/>
        -->
        <!--
            <ToggleButton Name="shields" 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Top" 
                      Margin="-120,260,0,0" 
                      Checked="shields_Checked" 
                      Unchecked="shields_Unchecked"
                      Height="10"
                      Width="10">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Red" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"  Value="Green" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
            -->
        <Label Name="shieldsText"
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
               Margin="235,369,0,0"
               Width="170"
               Content="DEFLECTOR SHIELDS"
               HorizontalContentAlignment="Center" FontFamily="Bahnschrift SemiBold SemiCondensed" FontSize="16" IsHitTestVisible="False"/>
        <Label Name="generatorText"
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
               Margin="408,369,0,0"
               Width="144"
               Content="GENERATOR"
               HorizontalContentAlignment="Center" FontFamily="Bahnschrift SemiBold SemiCondensed" FontSize="16" IsHitTestVisible="False"/>
        <CheckBox HorizontalAlignment="Left" Margin="270,404,0,0" VerticalAlignment="Top" Height="100" Width="100" Checked="shields_Checked" Unchecked="shields_Unchecked"/>
        <CheckBox HorizontalAlignment="Left" Margin="430,404,0,0" VerticalAlignment="Top" Height="100" Width="100" Checked="generator_Checked" Unchecked="generator_Unchecked"/>
        <CheckBox HorizontalAlignment="Left" Margin="599,165,0,0" VerticalAlignment="Top" Height="100" Width="100" Checked="warpDrive_Checked" Unchecked="warpDrive_Unchecked"/>
        <TextBox HorizontalAlignment="Left" Margin="594,134,0,0" Text="WARP DRIVE" TextWrapping="Wrap" VerticalAlignment="Top" Width="110" HorizontalContentAlignment="Center" FontFamily="Bahnschrift SemiBold SemiCondensed" FontSize="20" IsHitTestVisible="False" Background="{x:Null}" BorderBrush="{x:Null}"/>

        <Grid Height="150" Width="150" Margin="70,360,564,36">
            <Slider Name="knob">
                <Slider.Template>
                    <ControlTemplate>
                        <Viewbox>
                            <Canvas Width="300" Height="300" Margin="0">
                                <Ellipse Fill="#FF2E2E2E" Width="300" Height="300" Canvas.Left="0" Canvas.Top="0" 
                                    Stroke="#FF8B8A8A" StrokeThickness="10"
                                    MouseLeftButtonUp="Ellipse_MouseLeftButtonUp"
                                    MouseMove="Ellipse_MouseMove"/>
                                <!--<Ellipse Fill="Black" Width="60" Height="60" Canvas.Left="120" Canvas.Top="120"/>-->
                                <Canvas>
                                    <!--<Line Stroke="Red" StrokeThickness="5" X1="150" Y1="150" X2="150" Y2="10"
                                        MouseLeftButtonUp="Ellipse_MouseLeftButtonUp"/>
                                    -->
                                    <Ellipse Fill="White" Width="50" Height="50" Canvas.Left="130" Canvas.Top="18"
                                        MouseLeftButtonDown="Ellipse_MouseLeftButtonDown"
                                        MouseLeftButtonUp="Ellipse_MouseLeftButtonUp">
                                        <Ellipse.ToolTip>
                                            <ToolTip>
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                    Path="Value" Converter="{StaticResource valueTextConverter}"/>
                                            </ToolTip>
                                        </Ellipse.ToolTip>
                                    </Ellipse>
                                    <Canvas.RenderTransform>
                                        <RotateTransform CenterX="150" CenterY="150">
                                            <RotateTransform.Angle>
                                                <MultiBinding Converter="{StaticResource valueAngleConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value"/>
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Minimum"/>
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum"/>
                                                </MultiBinding>
                                            </RotateTransform.Angle>
                                        </RotateTransform>
                                    </Canvas.RenderTransform>
                                </Canvas>
                            </Canvas>
                        </Viewbox>
                    </ControlTemplate>
                </Slider.Template>
            </Slider>
        </Grid>

    </Grid>
</Window>
